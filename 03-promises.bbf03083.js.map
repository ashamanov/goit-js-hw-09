{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE3CF,EAAKM,iBAAiB,UAEtB,SAAgBC,GACdA,EAAMC,iBACN,IAAIC,EAAQC,SAASP,EAAWQ,OAChC,MAAMC,EAAOF,SAASN,EAAUO,OAC1BE,EAASH,SAASL,EAAYM,OAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,IAAIC,EAAW,EACfC,YAAW,KAef,IAAuBC,EAAUC,EAd3BH,GAAYD,GAcKG,EAbHF,EAaaG,EAbHT,EAcrB,IAAIU,SAAQ,CAACC,EAASC,KAC3BL,YAAW,KACT,MAAMM,EAAgBC,KAAKC,SAAW,GAClCF,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KArBJO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAI,uBAAqBV,QAAiBC,MAAU,IAE7DU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQC,IAAI,sBAAoBV,QAAeC,MAAU,IAG7DT,GAASG,CAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', create);\n\nfunction create(event) {\n  event.preventDefault();\n  let delay = parseInt(firstDelay.value);\n  const step = parseInt(delayStep.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = 1;\n    setTimeout(() => {\n      position += i;\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delay += step;\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","position1","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.bbf03083.js.map"}